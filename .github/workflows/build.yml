name: 'Build Java'

on:
  push:
    branches:
      - develop

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Build with maven
        run: mvn clean install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Load AWS secrets
        run: echo "$(aws secretsmanager get-secret-value --secret-id ${{ secrets.AWS_SECRET_ID }} --query SecretString --output text)" > aws_secrets.json && echo "AWS_SECRETS=$(cat aws_secrets.json)" >> $GITHUB_ENV

      #      - name: Set environment variables
      #        run: |
      #          echo "MONGODB_DATABASE=$(jq -r '.MONGODB_DATABASE' aws_secrets.json)" >> $GITHUB_ENV
      #          echo "MONGODB_HOST=$(jq -r '.MONGODB_HOST' aws_secrets.json)" >> $GITHUB_ENV
      #          echo "MONGODB_PORT=$(jq -r '.MONGODB_PORT' aws_secrets.json)" >> $GITHUB_ENV
      #          echo "MONGODB_USERNAME=$(jq -r '.MONGODB_USERNAME' aws_secrets.json)" >> $GITHUB_ENV
      #          echo "MONGODB_PASSWORD=$(jq -r '.MONGODB_PASSWORD' aws_secrets.json)" >> $GITHUB_ENV
      #          echo "MONGODB_AUTHENTICATION_DATABASE=$(jq -r '.MONGODB_AUTHENTICATION_DATABASE' aws_secrets.json)" >> $GITHUB_ENV
      #          echo "AWS_BUCKET_NAME=$(jq -r '.AWS_BUCKET_NAME' aws_secrets.json)" >> $GITHUB_ENV
      #          echo "AWS_REGION=$(jq -r '.AWS_REGION' aws_secrets.json)" >> $GITHUB_ENV

      - name: ECR login
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build Docker image
        run: docker build -t photo-archival .

      - name: Tag Docker image
        run: docker tag ${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Push Docker image to Amazon ECR
        run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
